=====================================================================================
============ 1. INSTALLATION GUIDE FOR DLROBOT WORKERS (HARDWARE) ===================
=====================================================================================

This configuration is tested on Ubuntu 18, 20 (preferable)

1.1. Yandex cloud worker, create workstation
   2 ГБ RAM, 3 ГБ своп, 25 ГБ HDD, Ubuntu 20, "interruptable", public IP, price 300 RUB

   For Yandex.Cloud, increase swap file
   sudo swapoff -a
   sudo dd if=/dev/zero of=/swapfile bs=3M count=1024
   sudo mkswap /swapfile
   sudo swapon /swapfile

1.2 set date
   sudo dpkg-reconfigure tzdata

1.3.  Get lic.bin (proprietary license file) from sokirko@yandex.ru, move lic.bin to $HOME, add to ~/.profile:
   scp -P 2223 disclosures.ru:~/lic.bin ~/

1.4 For laptops (not cloud servers), set in /etc/systemd/logind.conf the following lines:
 HandleLidSwitch=ignore
 HandleLidSwitchDocked=ignore

 then
   sudo systemctl restart systemd-logind



==========================================================================
===== 2.  COMMON WORKER/SERVER ACTIONS (do it for all workstations)  =====
==========================================================================

2.1 sudo apt update
   sudo apt install -y  curl p7zip-full unrar libcurl4-openssl-dev libssl-dev libreoffice \
        python3-wheel calibre  catdoc xlsx2csv default-libmysqlclient-dev libgdiplus python3-pip python3.8-dev \
        firefox git

2.2 git clone https://github.com/TI-Russia/smart_parser.git ~/smart_parser

2.3 Install python3
   pip3 install -r /home/sokirko/smart_parser/tools/requirements.txt

2.4. install dotnet according  sudo apt-get install -y dotnet-runtime-3.1
      wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      sudo dpkg -i packages-microsoft-prod.deb
      sudo apt-get update
      sudo apt-get install -y apt-transport-https
      sudo apt-get update
      sudo apt-get install -y dotnet-sdk-3.1


2.6 update ~/.profile
    export ASPOSE_LIC=~/lic.bin
    export PYTHONPATH=~/smart_parser/tools:$PYTHONPATH
    export DECLARATOR_CONV_URL=disclosures.ru:8091

    # local central network names
    export CENTRAL_HOST_NAME=migalka
    export SMART_PARSER_SERVER_ADDRESS=$CENTRAL_HOST_NAME:8165
    export DLROBOT_CENTRAL_SERVER_ADDRESS=$CENTRAL_HOST_NAME:8089

    source ~/.profile

2.7 compile and test smart_parser (c#, ~/smart_parser/src)
   dotnet build -c Release ~/smart_parser/src
   dotnet test -c Release ~/smart_parser

2.8 compile  and test ~/smart_parser/tools/Office2Txt
   dotnet build -c Release ~/smart_parser/tools/Office2Txt
   dotnet test -c Release ~/smart_parser/tools/Office2Txt

2.9.  download https://github.com/mozilla/geckodriver/releases/tag/v0.26.0 (linux or windows);
      cd  /usr/local/bin
      sudo wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
      sudo tar xfz geckodriver-v0.26.0-linux64.tar.gz

2.10. Test dlrobot
    cd ~/smart_parser/tools/robots/dlrobot/tests
    bash run_tests.sh


=====================================================================================
========================= 3. INSTALL DLROBOT_CENTRAL SERVICE=========================
=====================================================================================

3.1 install yandex cloud console (central)
   curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
   source ~/.profile
   get token from sokirko@yandex.ru (more ~/.config/yandex-cloud/config.yaml)
   yc init
   Which zone do you want to use as a profile default ru-central1-c
   yc compute instance list

3.2 Запуск сервиса smart_parser_cache
    export SMART_PARSER_CACHE_FOLDER=~/declarator_hdd/declarator/smart_parser_cache
    mkdir -p $SMART_PARSER_CACHE_FOLDER
    cd $SMART_PARSER_CACHE_FOLDER
    rm nohup.out; nohup python3 ~/smart_parser/tools/robots/dlrobot/scripts/cloud/smart_parser_cache.py &

3.3 Построение списка всех входных доменов
    # optional python $TOOLS/robots/dlrobot/scripts/check_domains.py --human-files $HUMAN_FILES_JSON --reached-domains ../domains/new_domains.txt  --timeouted-domains timeouted-domains.txt
    python $TOOLS/robots/dlrobot/scripts/create_by_domains.py --domains $TOOLS/robots/dlrobot/domains.txt --domains $TOOLS/robots/dlrobot/domains/fix_region.txt --output-folder $INPUT_DLROBOT_PROJECTS


3.4  Запуск сервиса dlrobot_central
   export DLROBOT_CENTRAL_FOLDER=~/declarator_hdd/declarator/dlrobot_central
   mkdir $DLROBOT_CENTRAL_FOLDER
   cd $DLROBOT_CENTRAL_FOLDER
   nohup python3 $TOOLS/robots/dlrobot/scripts/cloud/dlrobot_central.py  \
                 --input-folder input_projects \
                 --result-folder processed_projects \
                 --read-previous-results --check-yandex-cloud &

3.5  init crontab in central for monitoring:
crontab -e

SHELL=/bin/bash
MAILTO=username
#Mins  Hours  Days   Months  Day of the week
*/10       *     *        *      *      python /home/sokirko/smart_parser/tools/ConvStorage/scripts/get_stats.py --history-file /home/sokirko/declarator_hdd/declarator/convert_stats.txt
*/10       *     *        *      *      python /home/sokirko/smart_parser/tools/robots/dlrobot/scripts/cloud/dlrobot_stats.py --central-stats-file  /home/sokirko/declarator_hdd/declarator/2020-09-29/processed_projects/dlrobot_remote_calls.dat --conversion-server-stats /home/sokirko/declarator_hdd/declarator/convert_stats.txt --output-folder ~/smart_parser.disclosures_prod/tools/disclosures_site/disclosures/static/dlrobot



=====================================================================================
============ 4. INSTALLATION GUIDE FOR DLROBOT_WORKER (SOFTWARE)   =================
=====================================================================================

4.1 Create dlrobot worker service:
    sudo cp ~/smart_parser/tools/robots/dlrobot/scripts/cloud/dlrobot_worker.service /etc/systemd/system
    sudo chmod 644 /etc/systemd/system/dlrobot_worker.service
    sudo systemctl enable dlrobot_worker
    sudo systemctl daemon-reload
    #adjust depending on workstation (on yandex-cloud --worker-count 2, otherwise --worker-count 4)
    sudo nano /etc/systemd/system/dlrobot_worker.service

4.2 Enable start/stop  service dlrobot_worker without password
  sudo visudo
  add line:
     sokirko ALL=(ALL) NOPASSWD: /bin/systemctl start dlrobot_worker,  /bin/systemctl stop  dlrobot_worker

4.3 Start  dlrobot_worker
    sudo systemctl start dlrobot_worker


=====================================================================================
============ 5. INSTALLATION GUIDE FOR WWW (can be on the central)  =================
=====================================================================================

Following https://habr.com/ru/post/501414/

5.1   Install python environment in /var/www/smart_parser
cd /var/www
sudo chmod a+rwx .
git clone https://github.com/TI-Russia/smart_parser.git

cd /var/www/smart_parser/tools
sudo apt install python3.8-venv
python3 -m venv  venv
source venv/bin/activate
pip3 install -r requirements.txt

5.2 install disclosures service
    cd /var/www/smart_parser/tools/disclosures_site/scripts/disclosures.service
    sudo cp disclosures.service  /etc/systemd/system
    sudo systemctl restart disclosures
    sudo systemctl enable disclosures

5.3 create gunicorn service

 5.3.1  create gunicorn service
    cd /var/www/smart_parser/tools/disclosures_site/scripts/disclosures.service
    sudo cp gunicorn.socket  /etc/systemd/system
    sudo cp gunicorn.service /etc/systemd/system

    sudo systemctl start gunicorn.socket
    sudo systemctl enable gunicorn.socket

    sudo systemctl restart gunicorn.service
    sudo systemctl status gunicorn.service

  5.3.2 test gunicorn (optional)
     /var/www/smart_parser/env/bin/gunicorn --env DJANGO_SETTINGS_MODULE=disclosures.settings.prod --bind localhost:8000 disclosures.wsgi


5.4 install nginx

    sudo apt install nginx
    cd /var/www/smart_parser/tools/disclosures_site/scripts/disclosures.service
    sudo cp nginx.config /etc/nginx/sites-available/disclosures.ru
    sudo ln -s  /etc/nginx/sites-available/disclosures.ru  /etc/nginx/sites-enabled
    sudo rm /etc/nginx/sites-enabled/default
    sudo systemctl restart nginx
    sudo systemctl status nginx

5.5 install https
    sudo apt-get install certbot python3-certbot-nginx
    sudo certbot --nginx
    (здесь точно все дописано?)
